~~~~~~~~~~~~~~~~~~~
0.0	INFORMATION
~~~~~~~~~~~~~~~~~~~
WEB SITE: http://jupload.sourceforge.net/
Version : 1.0

This applet comes with source code. I take no responsibility for any damages 
caused by the usage of this applet. Use it at your own risk!

~~~~~~~~~~~~~~~~~~~
1.0	DESCRIPTION
~~~~~~~~~~~~~~~~~~~
Traditional HTML upload forms allow you to select and upload one file at a 
time. This restriction is unacceptable when it comes to uploading thousands 
of files within a single folder. 

Java Multiple File Upload Applet (JUpload) takes care of this limited by 
allowing users to select and upload a whole directory and the files 
within it with a single click.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2.1	JUpload Applet Permission (Short version).
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
To run the JUpload applet from jupload.sourceforge.net you need
to place the following into your Jave security Policy File.

---------------------------------------------------------------------
grant codeBase "http://jupload.sourceforge.net/wjhk.jupload.jar" {
   // java.swing.JFileChooser Need to read and Write Access.
	permission java.io.FilePermission "<<ALL FILES>>", "read, write";
	permission java.util.PropertyPermission "user.dir", "read";
	permission java.util.PropertyPermission "user.home", "read";
	permission java.util.PropertyPermission "user.name", "read";

   // Needed by the upload thread.
	permission java.lang.RuntimePermission "modifyThread";
};
---------------------------------------------------------------------

Java User Policy resides at "<USER_HOME>\.java.policy"
  -> Under Windows 98 it's "C:\WINDOWS\.java.policy"
  -> Under Windows XP it's "C:\Documents and Settings\<USER_NAME>"

NOTE: The 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2.2	JUpload Applet Permissions knowledge base (long version):
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The Applet Needs the following Permissions
 - File Read and Write Permission for the java.swing.JFileChooser.
 - Read Permission for user.dir, user.home and user.name.
 - Runtime permission for Upload Thread.

This can be achieved by either of these 3 methods:

1) Sign the applet -> 
   "http://java.sun.com/products/plugin/1.3/docs/rsa_signing.html"

2) Modify the Security Policy ->
   User Policy at "<USER_HOME>\.java.policy"
      -> Under Windows 98 it's "C:\WINDOWS\.java.policy"
      -> Under Windows XP it's "C:\Documents and Settings\<USER_NAME>"
   Default Policy at "<JAVA_HOME>\lib\security\java.security"

Add the following into the User or Default Security Policy File.
---------------------------------------------------------------------
grant codeBase "http://jupload.sourceforge.net/wjhk.jupload.jar" {
   // java.swing.JFileChooser Need to read and Write Access.
	permission java.io.FilePermission "<<ALL FILES>>", "read, write";
	permission java.util.PropertyPermission "user.dir", "read";
	permission java.util.PropertyPermission "user.home", "read";
	permission java.util.PropertyPermission "user.name", "read";

   // Needed by the upload thread.
	permission java.lang.RuntimePermission "modifyThread";
};
---------------------------------------------------------------------
NOTE: The above example assume the following:
       - JAR file at "http://jupload.sourceforge.net/wjhk.jupload.jar".

3) Self Sign Applet and cert importation by End user.
    - Generate Private/Public key set.
       keytool -genkey -alias "WJHK"
    - Sign the Applet with the private key.
       jarsigner wjhk.jupload.jar WJHK
    - Verify the jar file have being sign properly.
       jarsigner -verify wjhk.jupload.jar

    NOTE: The following steps can be skiped if you are siging
    	  and viewing the applet at the same computer.
    - Export key for user to import
       keytool -export -alias WJHK -file WJHK.pubCert
    - Import key by user.
       keytool -import -alias WJHK -file WJHK.pubCert

Add the following into the User or Default Security Policy File.
---------------------------------------------------------------------
keystore ".keystore";

grant SignedBy "WJHK"{
   // java.swing.JFileChooser Need to read and Write Access.
	permission java.io.FilePermission "<<ALL FILES>>", "read, write";
	permission java.util.PropertyPermission "user.dir", "read";
	permission java.util.PropertyPermission "user.home", "read";
	permission java.util.PropertyPermission "user.name", "read";
	// java.swing.JFileChooser also need this.
	permission java.lang.RuntimePermission "modifyThread";
};
---------------------------------------------------------------------

~~~~~~~~~~~~~~~~~~~~~~
3.0	Server scripts
~~~~~~~~~~~~~~~~~~~~~~
Here's a simple JSP script to log the input into file
---------------------------------------------------------------------
<%@ page language="java" import="java.io.*, java.sql.*, java.util.*" %>
<%
   // This JSP will save the request Input Steam into a file.
   String fileOut = "c:/temp/writeOut.bin";
    try{
      ServletInputStream in = request.getInputStream();
      byte[] line = new byte[1024];
      int bytes = 0;

      FileOutputStream fileOutS = new  FileOutputStream(fileOut);

      while(0 <(bytes = in.read(line))){
        fileOutS.write(line,0, bytes);
      }

      fileOutS.close();
      fileOutS = null;
      out.println("SUCCESSFUL : Upload Stream Saved to \"" + fileOut + "\".");
    }catch(Exception e){
      out.println("ERROR : Exception \"" + e.getMessage() + "\" Occured.");
    }
%>
---------------------------------------------------------------------
A more sophisticated server JavaBean can be obtained at www.servlets.com

~~~~~~~~~~~~
4.0	FAQ:
~~~~~~~~~~~~
1) If your permissions are not setup properly the following Error messages
   will appear.

    - "File Chooser Exception: access denied (java... )"
